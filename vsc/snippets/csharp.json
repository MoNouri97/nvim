{
  "comment": {
    "prefix": "summary",
    "body": [
      "/// <summary>",
      "/// ${1:What it does.}",
      "/// </summary>",
      "/// <param name=\"${3:parameterName}\">${4:Parameter description.}</param>",
      "/// <returns>${2:Type and description of the returned object.}</returns>",
      "/// <example>${5:Write me later.}</example>$0"
    ]
  },
  "signal": {
    "prefix": "signal",
    "body": ["[Signal] public delegate void ${1:Name}EventHandler($2);"]
  },
  "test": {
    "prefix": "test",
    "body": ["testing testing ..."]
  },
  "export": {
    "prefix": "export",
    "body": ["[Export] private ${1:float} $0;"]
  },
  "export group": {
    "prefix": "expgroup",
    "body": ["[ExportGroup(\"${1:Refs}\")]\n$0"],
    "description": "Export Group For Godot"
  },
  "export tool button": {
    "prefix": "expbtn",
    "body": [
      "[ExportToolButton(\"${1:Update}\")]",
      "public Callable update => Callable.From($1);"
    ],
    "description": "Export Tool Button For Godot"
  },
  "autoload": {
    "prefix": "autoload",
    "body": ["[Autoload] private ${1:Debug} $0;"]
  },
  "OnReady": {
    "prefix": "onReady",
    "body": ["[OnReady] private ${1:Type} $0;"]
  },
  "LogDisabled": {
    "prefix": "logDisabled",
    "body": ["[Export]private bool logDisabled = true;"]
  },
  "_Process": {
    "prefix": "process",
    "body": ["public override void _Process(double delta) {", "\t$0", "}"]
  },
  "_Ready": {
    "prefix": "ready",
    "body": ["public override void _Ready() {", "\t$0", "}"]
  },
  "ExtentionMethod": {
    "prefix": "extention",
    "body": [
      "public static void ${1:Name}(this ${2:Node3D} node ${3:,arg} ) {",
      "\t$0",
      "}"
    ]
  },
  "WireOnReady": {
    "prefix": "wire",
    "body": [
      "public override void _Notification(int what) {",
      "\tif (what == NotificationEnterTree) {",
      "\t\tthis.WireOnReady();",
      "\t}",
      "}"
    ]
  },
  "buttonExport": {
    "prefix": "buttonExport",
    "body": [
      "public string[] _get_tool_buttons()",
      "{ return new string[] { \"$0\" };} "
    ]
  }
}
